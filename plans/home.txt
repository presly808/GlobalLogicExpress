1. See next topics

2. Книги
    http://rutracker.org/forum/viewtopic.php?t=4212262
    Здесь основы джавы и ООП в картинках

    http://rutracker.org/forum/viewtopic.php?t=3694471
    Здесь паттерны проектирования, дают понимания как и где использовать принципы ООП

    Как справочник использовать
        Шилд Java
        Хорстманн Java
        Документацию



********************************************************************************************
*. Реализовать структуру данных Двунаправленную Очередь(Dequeue). НА ОСНОВЕ СВЯЗНОГО СПИСКА
   	- добавить элемент в хвост
   	- добавить элемент в голову
   	- забрать элемент с головы
   	- забрать элемент с хвоста
   	- Поиск элемента по значению (сравнение через equals)
       - Поменять местами первый и последний элементы
   	- Поменять местами наибольший и наименьший элементы, в случае если реализован интерфейс Comparable
   	- Отсортировать список, в случае если реализован интерфейс Comparable
   	- Удалить повторяющиеся элементы из списка, в случае если реализован интерфейс Comparable
   	* Перестроить элементы в обратном порядке
   	* Реализовать итератор


********************************************************************************************
*. Задание 1. Написать приложение продажи ж/д билетов, участвуют билетная касса, билеты.
   	Билеты продаются из начального пункта до конечного.
   	Билеты продаются на один рейс, одного поезда.
   	Купить билеты можно начиная с 45 суток до отправления, до момента отправления

   Билет содержит следующие поля:

   	1. Пункт отбытия
   	2. Пункт назначения
   	3. Дата и время отбытия
   	4. Номер поезда
   	5. Номер вагона
   	6. Номер места
   	7. Цена

   Плацкартный вагон
       9 шестиместных пассажирских отделения
       Купейные (нечетные № 1-35 — нижние, четные № 2-36 — верхние)
       Боковые (нечетные места № 37-53 - нижние, четные № 38-54 - верхние)
   Купейный вагон
       Только купейные места (36)
   Спальный
       Розетки
       Только купейные места (18)

   Касса позволяет:

   1. Узнать информацию о всех билетах
   2. Узнать информацию о билете (номер поезда, дата отправления, вагон, место)
   3. Купить билет (билет не продан, хватает денег у покупателя)
   4. Сдать билет (билет продан, есть деньги в кассе)
   5. Провести инкассацию (по кодовому слову)

   Задание 2.

   Написать приложение "поезд", способный размещать пассажиров и ехать в пункт назначения.

   	Поезд содержит следующие поля:

   	1. Номер
   	2. Расписание
   	3. Вагоны

   	У поезда следующие методы:

   	1. Посадить пассажира.
   	2. Высадить пассажиров на станции.
   	3. Ехать в пункт разначения.

   	Поезд состоит из следующие вагонов:

   	1. Плацкартный
   	2. Купейный
   	3. Спальный
   	4. Ресторан
   	5. Локомотив

   	В вагоне следующие поля:

   	1. Места

   	В вагоне следующие методы:

   	1. Посадка в вагон одного пассажира (правильность билета, свободность места)
   	2. Высадка в пункте назначения одного пассажира по номеру места.
   	3. Высадка всех, приехавших в пункт назначения, пассажиров.
   	4. Выйти на станции.

********************************************************************************************
*. 1. Написать приложение для управления сервисным центром  (переопределять toString, equals)
   	Будут следующие классы:
   		а) Директор
   			- сменить место расположения сервисного центра
   			- нанять сотрудника
   			- уволить сотрудника
   			- посмотреть всех сотрудников
   			- платить налог
   			- увеличить зарплату сотрудникам на 10%
   			-* посмотреть доход за день, неделю, месяц
   			-* заплатить з/п сотрудникам

   		б)Администратор
   			- Посмотреть всех клиентов
   			- взять на ремонт технику(цена ремонта = 10% от суммы товара)
   			- показать отчет(количество отремонтированной техники за неделю)
   			- отдать отремонтированный товар клиенту
   			- передать технику специалисту по ремонту

   		в)Специалист по ремонту
   			- ремонтировать
   			- возвращать отремонтированную технику администратору

   		г)Клиент
   			- сдать товар на ремонт
   			- забрать товар по идентификационному коду

   		д)Техника
   			- посмотреть состояние
   			- посмотреть дату покупки
   			- посмотреть цену

   		При запуске	приложения мы можем войти, как начальник, Администратор, Клиент, Специалист по ремонту
   			Пример:
   			1) Директор
   				1) сменить место расположения сервисного центра
   				2) нанять сотрудника
   				3) уволить сотрудника
   				4) платить налог
   				5) посмотреть всех сотрудников
   				6) увеличить зарплату сотрудникам на 10%
   				7) посмотреть доход за месяц
   				8) заплатить з/п сотрудникам
   			2) Администратор
   				...
   			3) Клиент
   				...
   			4) Специалист
   				...
   2.
   	2.1. Отсортировать клиентов по ФИО в алфавитном порядке
   	2.2. Отсортировать сотрудников по количеству отремонтированной техники

    С помощью стандартной сериализации
    	- сохранять все данные перед выходом из программы
    	- загружать все данные при запуске программы

   3. Написать свое сохранение в файл

    			- Сохранить всех сотрудников

    			пример содержимого в файле(сохранять состояние объекта)
    			1.name=Adam,age=15,salary=1500,position=Director...
    			2.name=Lamber,age=25,salary=2000,position=Admin...
    			3.name=Jerar,age=32,salary=4000,position=Repairer...
    			...

    			- Сохранить все товары(по аналогии с сотрудниками)

    			- Сохранить всех клиентов

    			- Загрузить всех сотрудников

    			- Загрузить всех клиентов

    			- Загрузить все товары

    			- Загрузить всех клиентов

*********************************************************************************************
Рассмотреть паттерны проетирования
Strategy, Decorator, Singleton, MVC, Factory

*********************************************************************************************
Написать
SelectionSort, InsertionSort

*********************************************************************************************
Очень хорошие задачи на логику
http://codingbat.com/java